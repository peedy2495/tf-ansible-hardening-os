- name: password rules
  copy:
    src: pwquality.conf
    dest: /etc/security/
    force: yes
    owner: root
    group: root
    mode: 0644
  tags:
    - logins

- name: wordlists
  block:
    - name: set var vor githubusercontent for internet
      set_fact:
        raw_githubusercontent_url: "https://raw.githubusercontent.com"
      when: not nexus

    - name: set var vor githubusercontent for internet
      set_fact:
        raw_githubusercontent_url: "{{ nexus_proxy_proto }}://{{ nexus_proxy }}:{{ nexus_proxy_port }}/repository/raw-githubusercontent"
      when: nexus

    - name: load wordlists
      include_vars: wordlists.yml

    - name: pull desired wordlists
      get_url:
        url: "{{ item.url }}"
        dest: "/usr/share/dict/{{ item.name }}"
        mode: "0644"
      register: pull_wordlists
      with_items:
        - "{{cracklib_wordlists}}"

    - name: Update cracklib database
      shell: create-cracklib-dict /usr/share/dict/*
      when: pull_wordlists.changed
  notify:
    - clear caches
  tags:
    - logins
    - wordlists

- name: Systemlock after failed logins
  block:
    - name: lock system after n retries
      blockinfile:
        dest: /etc/pam.d/common-auth
        state: present
        insertafter: "details"
        marker_begin: "\n# BEGIN"
        block: |
          # lock system after n replies
          auth    required                        pam_tally2.so onerr=fail audit silent deny={{ pwd_syslock }} unlock_time={{ pwd_syslock_time }}
    - name: consider login counter for sudo
      blockinfile:
        dest: /etc/pam.d/sudo
        state: present
        insertafter: "PAM"
        marker_begin: "\n# BEGIN"
        block: |
          # consider login counter for sudo
          account    required   pam_tally2.so
  tags:
    - logins

- name: set password history
  blockinfile:
    dest: /etc/pam.d/common-password
    state: present
    insertafter: "details"
    marker_begin: "\n# BEGIN"
    block: |
      # password history
      password        required                        pam_pwhistory.so remember={{ pwd_history }}
  tags:
    - logins

- name: set password age
  template:
    src: login.j2
    dest: /etc/login.defs
    owner: root
    group: root
    mode: 0644
    force: yes
  tags:
    - logins

- name: root login via local terminals, only
  copy:
    src: securetty
    dest: /etc/
    owner: root
    group: root
    mode: 0644
  tags:
    - logins

- name: disable ssh access
  systemd:
    name: sshd
    state: stopped
    enabled: no
  when: not login_ssh
  tags:
    - logins

- name: secure ssh access
  block:
    - name: backup virgin sshd config
      shell: cp -p /etc/ssh/sshd_config /etc/ssh/sshd_config.orig

    - name: modify config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - regexp: "(^$|^#)Port\ "
          line: "Port 22"
        - regexp: "(^$|^#)AddressFamily\ "
          line: "AddressFamily inet"
        - regexp: "(^$|^#)ListenAddress\ "
          line: "ListenAddress 0.0.0.0"
        - regexp: "(^$|^#)AllowGroups\ "
          line: "AllowGroups sudo"
        - regexp: "(^$|^#)PermitRootLogin\ "
          line: "PermitRootLogin no"
        - regexp: "(^$|^#)PermitEmptyPasswords\ "
          line: "PermitEmptyPasswords no"
        - regexp: "(^$|^#)UsePAM\ "
          line: "UsePAM yes"
        - regexp: "ChallengeResponseAuthentication\ "
          line: "ChallengeResponseAuthentication no"
        - regexp: "(^$|^#)HostbasedAuthentication\ "
          line: "HostbasedAuthentication no"
        - regexp: "(^$|^#)PubkeyAuthentication\ "
          line: "PubkeyAuthentication yes"
        - regexp: "(^$|^#)MaxAuthTries\ "
          line: "MaxAuthTries 5"
        - regexp: "(^$|^#)Ciphers\ "
          line: "Ciphers chacha20-poly1305@openssh.com"
        - regexp: "(^$|^#)FingerprintHash\ "
          line: "FingerprintHash sha256"
        - regexp: "(^$|^#)HostbasedAcceptedKeyTypes\ "
          line: "HostbasedAcceptedKeyTypes ssh-ed25519"
        - regexp: "(^$|^#)HostKeyAlgorithms\ "
          line: "HostKeyAlgorithms sk-ssh-ed25519@openssh.com,ssh-ed25519"
        - regexp: "(^$|^#)KexAlgorithms\ "
          line: "KexAlgorithms curve25519-sha256@libssh.org"
        - regexp: "(^$|^#)MACs\ "
          line: "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com"
        - regexp: "(^$|^#)PubkeyAcceptedKeyTypes\ "
          line: "PubkeyAcceptedKeyTypes sk-ssh-ed25519@openssh.com,ssh-ed25519"
        - regexp: "(^$|^#)Banner\ "
          line: "#Banner /etc/issue.net"
        - regexp: "(^$|^#)PrintLastLog\ "
          line: "#PrintLastLog no"
        - regexp: "(^$|^#)PrintMotd\ "
          line: "PrintMotd no"
        - regexp: "(^$|^#)RekeyLimit\ "
          line: "RekeyLimit 1G 1h"
        - regexp: "(^$|^#)ClientAliveInterval\ "
          line: "ClientAliveInterval 10"
        - regexp: "(^$|^#)ClientAliveCountMax\ "
          line: "ClientAliveCountMax 60"
        - regexp: "(^$|^#)TCPKeepAlive\ "
          line: "TCPKeepAlive no"
        - regexp: "(^$|^#)AcceptEnv\ "
          line: "AcceptEnv LANG LC_*"
        - regexp: "(^$|^#)AllowAgentForwarding\ "
          line: "AllowAgentForwarding no"
        - regexp: "(^$|^#)DebianBanner\ "
          line: "DebianBanner no"
        - regexp: "(^$|^#)ExposeAuthInfo\ "
          line: "ExposeAuthInfo no"
        - regexp: "(^$|^#)PermitUserEnvironment\ "
          line: "PermitUserEnvironment no"
        - regexp: "(^$|^#)PermitUserRC\ "
          line: "PermitUserRC no"
        - regexp: "(^$|^#)StrictModes\ "
          line: "StrictModes yes"
        - regexp: "(^$|^#)AllowStreamLocalForwarding\ "
          line: "AllowStreamLocalForwarding no"
        - regexp: "(^$|^#)AllowTcpForwarding\ "
          line: "AllowTcpForwarding no"
        - regexp: "(^$|^#)DisableForwarding\ "
          line: "DisableForwarding yes"
        - regexp: "(^$|^#)GateWayPorts\ "
          line: "GateWayPorts no"
        - regexp: "(^$|^#)PermitTunnel\ "
          line: "PermitTunnel no"
        - regexp: "(^$|^#)SyslogFacility\ "
          line: "SyslogFacility AUTH"
        - regexp: "(^$|^#)LogLevel\ "
          line: "LogLevel INFO"
        - regexp: "(^$|^#)AuthenticationMethods\ "
          line: "AuthenticationMethods publickey"
        - regexp: "(^$|^#)PasswordAuthentication\ "
          line: "PasswordAuthentication no"
        - regexp: "(^$|^#)X11Forwarding\ "
          line: "X11Forwarding no"
        - regexp: "(^$|^#)UseDNS\ "
          line: "UseDNS no"
    - name: restarting sshd
      service:
        name: sshd
        state: restarted
  when: login_ssh
  notify:
    - clear caches
  tags:
    - logins

- name: preserve login fallback
  block:
    - name: pam other - remove includes
      lineinfile:
        path: /etc/pam.d/other
        regexp: "^@include"
        state: absent

    - name: pam other - add rules
      lineinfile:
        path: /etc/pam.d/other
        line: "{{ item }}"
        state: present
      with_items:
        - "auth required pam_deny.so"
        - "auth required pam_warn.so"
        - "account required pam_deny.so"
        - "account required pam_warn.so"
        - "password required pam_deny.so"
        - "password required pam_warn.so"
        - "session required pam_deny.so"
        - "session required pam_warn.so"
  tags:
    - logins

- name: pam login - add lastlog rule
  lineinfile:
    path: /etc/pam.d/login
    regex: "session.*optional.*pam_lastlog.so"
    line: "session    optional   pam_lastlog.so"
    state: present
    insertbefore: "^# Standard Un*x"
  tags:
    - logins

- name: run queued handlers
  meta: flush_handlers
  tags:
    - logins
