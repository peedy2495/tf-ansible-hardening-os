- name: password rules
  copy:
    src: pwquality.conf
    dest: /etc/security/
    force: yes
    owner: root
    group: root
    mode: 0644
  tags:
    - logins

- name: wordlists
  block:
    - name: set var vor githubusercontent for internet
      set_fact:
        raw_githubusercontent_url: "https://raw.githubusercontent.com"
      when: not use_nexus

    - name: set var vor githubusercontent for internet
      set_fact:
        raw_githubusercontent_url: "{{ nexus_proxy_proto }}://{{ nexus_proxy }}:{{ nexus_proxy_port }}/repository/raw-githubusercontent"
      when: use_nexus

    - name: load wordlists
      include_vars: wordlists.yml

    - name: pull desired wordlists
      get_url:
        url: "{{ item.url }}"
        dest: "/usr/share/dict/{{ item.name }}"
        mode: "0644"
      register: pull_wordlists
      with_items:
        - "{{cracklib_wordlists}}"

    - name: Update cracklib database
      shell: create-cracklib-dict /usr/share/dict/*
      when: pull_wordlists.changed
  notify:
    - clear caches
  tags:
    - logins
    - wordlists

- name: Systemlock after failed logins
  block:
    - name: lock system after n retries
      blockinfile:
        dest: /etc/pam.d/common-auth
        state: present
        insertafter: "details"
        marker_begin: "\n# BEGIN"
        block: |
          # lock system after n replies
          auth    required                        pam_tally2.so onerr=fail audit silent deny={{ pwd_syslock }} unlock_time={{ pwd_syslock_time }}
    - name: consider login counter for sudo
      blockinfile:
        dest: /etc/pam.d/sudo
        state: present
        insertafter: "PAM"
        marker_begin: "\n# BEGIN"
        block: |
          # consider login counter for sudo
          account    required   pam_tally2.so
  tags:
    - logins

- name: set password history
  blockinfile:
    dest: /etc/pam.d/common-password
    state: present
    insertafter: "details"
    marker_begin: "\n# BEGIN"
    block: |
      # password history
      password        required                        pam_pwhistory.so remember={{ pwd_history }}
  tags:
    - logins

- name: set password age
  template:
    src: login.j2
    dest: /etc/login.defs
    owner: root
    group: root
    mode: 0644
    force: yes
  tags:
    - logins

- name: root login via local terminals, only
  copy:
    src: securetty
    dest: /etc/
    owner: root
    group: root
    mode: 0644
  tags:
    - logins

- name: disable ssh access
  systemd:
    name: sshd
    state: stopped
    enabled: no
  when: not login_ssh
  tags:
    - logins

- name: secure ssh access
  block:
    - name: backup virgin sshd config
      shell: cp -p /etc/ssh/sshd_config /etc/ssh/sshd_config.orig

    - name: sshd - modify config keys
      # use item.first[true/yes] boolean with care due to security issues in case of appended lines!
      lineinfile:
        path: /etc/ssh/sshd_config
        firstmatch: "{{ item.first }}"
        regexp: '(^|^#){{ item.key }}\ '
        line: "{{ item.key }} {{ item.value }}"
        state: present
      with_items:
        - key: "Port"
          value: "22"
          first: "no"
        - key: "AddressFamily"
          value: "inet"
          first: "no"
        - key: "ListenAddress"
          value: "0.0.0.0"
          first: "yes"
        - key: "AllowGroups"
          value: "sudo"
          first: "no"
        - key: "PermitRootLogin"
          value: "no"
          first: "no"
        - key: "PermitEmptyPasswords"
          value: "no"
          first: "no"
        - key: "UsePAM"
          value: "yes"
          first: "no"
        - key: "ChallengeResponseAuthentication"
          value: "no"
          first: "no"
        - key: "HostbasedAuthentication"
          value: "no"
          first: "no"
        - key: "PubkeyAuthentication"
          value: "yes"
          first: "no"
        - key: "MaxAuthTries"
          value: "5"
          first: "no"
        - key: "Ciphers"
          value: "chacha20-poly1305@openssh.com"
          first: "no"
        - key: "FingerprintHash"
          value: "sha256"
          first: "no"
        - key: "HostbasedAcceptedKeyTypes"
          value: "ssh-ed25519"
          first: "no"
        - key: "HostKeyAlgorithms"
          value: "sk-ssh-ed25519@openssh.com,ssh-ed25519"
          first: "no"
        - key: "KexAlgorithms"
          value: "curve25519-sha256@libssh.org"
          first: "no"
        - key: "MACs"
          value: "hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com"
          first: "no"
        - key: "PubkeyAcceptedKeyTypes"
          value: "sk-ssh-ed25519@openssh.com,ssh-ed25519"
          first: "no"
        - key: "PrintMotd"
          value: "no"
          first: "no"
        - key: "RekeyLimit"
          value: "1G 1h"
          first: "no"
        - key: "ClientAliveInterval"
          value: "10"
          first: "no"
        - key: "ClientAliveCountMax"
          value: "60"
          first: "no"
        - key: "TCPKeepAlive"
          value: "no"
          first: "no"
        - key: "AcceptEnv"
          value: "LANG LC_*"
          first: "no"
        - key: "AllowAgentForwarding"
          value: "no"
          first: "no"
        - key: "DebianBanner"
          value: "no"
          first: "no"
        - key: "ExposeAuthInfo"
          value: "no"
          first: "no"
        - key: "PermitUserEnvironment"
          value: "no"
          first: "no"
        - key: "PermitUserRC"
          value: "no"
          first: "no"
        - key: "StrictModes"
          value: "yes"
          first: "no"
        - key: "AllowStreamLocalForwarding"
          value: "no"
          first: "no"
        - key: "AllowTcpForwarding"
          value: "no"
          first: "no"
        - key: "DisableForwarding"
          value: "yes"
          first: "no"
        - key: "GateWayPorts"
          value: "no"
          first: "no"
        - key: "PermitTunnel"
          value: "no"
          first: "no"
        - key: "SyslogFacility"
          value: "AUTH"
          first: "no"
        - key: "LogLevel"
          value: "INFO"
          first: "no"
        - key: "AuthenticationMethods"
          value: "publickey"
          first: "no"
        - key: "PasswordAuthentication"
          value: "no"
          first: "no"
        - key: "X11Forwarding"
          value: "no"
          first: "no"
        - key: "UseDNS"
          value: "no"
          first: "no"

    - name: sshd - disabling keys
      replace:
        path: /etc/ssh/sshd_config
        regexp: "^({{ item }}.*)"
        replace: '#\1'
      with_items:
        - "Banner"
        - "PrintLastLog"

    - name: restarting sshd
      service:
        name: sshd
        state: started
  when: login_ssh
  notify:
    - clear caches
  tags:
    - logins

- name: preserve login fallback
  block:
    - name: pam other - remove includes
      lineinfile:
        path: /etc/pam.d/other
        regexp: "^@include"
        state: absent

    - name: pam other - add rules
      lineinfile:
        path: /etc/pam.d/other
        line: "{{ item }}"
        state: present
      with_items:
        - "auth required pam_deny.so"
        - "auth required pam_warn.so"
        - "account required pam_deny.so"
        - "account required pam_warn.so"
        - "password required pam_deny.so"
        - "password required pam_warn.so"
        - "session required pam_deny.so"
        - "session required pam_warn.so"
  tags:
    - logins

- name: pam login - add lastlog rule
  lineinfile:
    path: /etc/pam.d/login
    regex: "session.*optional.*pam_lastlog.so"
    line: "session    optional   pam_lastlog.so"
    state: present
    insertbefore: "^# Standard Un*x"
  tags:
    - logins

- name: run queued handlers
  meta: flush_handlers
  tags:
    - logins
